<Application x:Class="SW1_ISO9126_FUZZY.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SW1_ISO9126_FUZZY"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source ="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source ="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source ="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source ="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source ="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source ="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"  />
                <ResourceDictionary Source ="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="SearchTile" TargetType="Controls:Tile">
                <Setter Property="Background" Value="{StaticResource SearchTileBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource SearchTyleHighlightedBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Controls:WindowButtonCommands}"
                   BasedOn="{StaticResource MahApps.Metro.Styles.WindowButtonCommands.Win10}" />

            <!-- Centrar elementos DataGrid-->
            <!--<Style TargetType="DataGridCell">
                <Style.Setters>
                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                </Style.Setters>
            </Style> -->

            <!-- Colores MessageBox -->
            <!-- IMPORTAR = xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit" -->
            
            <Style TargetType="{x:Type toolkit:MessageBox}">
                <Setter Property="Background" Value="White" />
                <!-- <Setter Property="BorderBrush" Value="Red" /> -->
                <Setter Property="CaptionForeground" Value="White" />
                <!-- <Setter Property="WindowBorderBrush" Value="Blue" /> -->
                <Setter Property="WindowBackground" Value="#FF33A133" />
                <!-- <Setter Property="WindowOpacity" Value="0.3" /> -->
                <Setter Property="Foreground" Value="Purple"/>
            </Style>

            <!-- Personalizar Slider-->

            <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid>
                                <Border Name="outerBorder"
                            Background="#5534b4e3"
                            BorderBrush="#5534b4e3"
                            Height="26" Width="26" Opacity="1" BorderThickness="2" CornerRadius="13"/>
                                <Border Name="innerBorder"
                            Background="#FF34b4e3"
                            BorderBrush="#FF34b4e3"
                            Height="10" Width="10" CornerRadius="5" Opacity="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="outerBorder" Property="BorderBrush" Value="#BB34b4e3" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="outerBorder" Property="Background" Value="#55ACACAC" />
                                    <Setter TargetName="outerBorder" Property="BorderBrush" Value="#55ACACAC" />
                                    <Setter TargetName="innerBorder" Property="Width" Value="4" />
                                    <Setter TargetName="innerBorder" Property="Height" Value="4" />
                                    <Setter TargetName="innerBorder" Property="CornerRadius" Value="2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MyFocusVisualStyte" >
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle x:Name="FocusStyle" StrokeDashArray="4 4" RadiusX="5" RadiusY="5" Fill="Transparent"
                           Stroke="#99029cc7" StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Top" SnapsToDevicePixels="True"
                 Height="4" Margin="0,0,0,2" />
                    <Border x:Name="TrackBackground"
                Grid.Row="1"
                Margin="10,0"
                BorderThickness="2"
                BorderBrush="LightGray"
                VerticalAlignment="Center" Height="4" />
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}" />
                        </Track.Thumb>
                    </Track>
                    <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Fill="LightGray" Placement="Bottom"
                 SnapsToDevicePixels="True" Height="4" Margin="0,2,0,0"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="TickPlacement" Value="TopLeft">
                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="BottomRight">
                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="Both">
                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Left" SnapsToDevicePixels="True"
                 Width="4" Margin="0,0,2,0" />
                    <Border x:Name="TrackBackground"
                Grid.Column="1"
                Margin="0,10"
                BorderThickness="2"
                BorderBrush="LightGray"
                HorizontalAlignment="Center" Width="4" />
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}" />
                        </Track.Thumb>
                    </Track>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Fill="LightGray" Placement="Right"
                 Width="4" Margin="2,0,0,0" SnapsToDevicePixels="True" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="TickPlacement" Value="TopLeft">
                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="BottomRight">
                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="Both">
                        <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisualStyte}" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="MinWidth" Value="104" />
                        <Setter Property="MinHeight" Value="21" />
                        <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="MinWidth" Value="21" />
                        <Setter Property="MinHeight" Value="104" />
                        <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            
            <!-- Boton circular -->
            
            <Style x:Key="MyFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <Grid Margin="8">
                                <Ellipse
                    Name="r1"
                    Stroke="Black"
                    StrokeDashArray="2 2"
                    StrokeThickness="1"/>
                                <Border
                    Name="border"
                    Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}"
                    BorderThickness="1"
                    CornerRadius="2"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="CircleButton" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
                <Setter Property="Background" Value="#FF6DB4EF"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Ellipse Fill="{TemplateBinding Background}"/>
                                <Ellipse>
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Offset="0" Color="#00000000"/>
                                            <GradientStop Offset="0.88" Color="#00000000"/>
                                            <GradientStop Offset="1" Color="#80000000"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse Margin="10" x:Name="highlightCircle" >
                                    <Ellipse.Fill >
                                        <LinearGradientBrush >
                                            <GradientStop Offset="0" Color="#50FFFFFF"/>
                                            <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                            <GradientStop Offset="1" Color="#50FFFFFF"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="highlightCircle" Property="Fill">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                                <GradientStop Offset="0" Color="#50FFFFFF"/>
                                                <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                                <GradientStop Offset="1" Color="#50FFFFFF"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="content" Property="RenderTransform">
                                        <Setter.Value>
                                            <TranslateTransform Y="0.5" X="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
